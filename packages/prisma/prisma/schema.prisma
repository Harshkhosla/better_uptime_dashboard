// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id      String   @id @default(uuid())
  email   String   @unique
  name    String?
  password String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  websites  Website[] @relation("UserWebsites")
  regions   Region[]  @relation("UserRegions") 
}

model NotificationPreference {
  id          String  @id @default(uuid())
  notifyCall  Boolean @default(false)
  notifySMS   Boolean @default(false)
  notifyEmail Boolean @default(false)
  notifyPush  Boolean @default(false)
  websites    Website[]
}

model Website{
  id  String @id @default(uuid())
  url String
  timeAdded DateTime
  websiteStatus WebsiteStatus[]
  alert  String?
  acknowledge       String?
  escalationPolicy  String?
  notificationPref  NotificationPreference? @relation(fields: [notificationPrefId], references: [id])
  notificationPrefId String?
  owner       User      @relation("UserWebsites", fields: [ownerId], references: [id])
  ownerId     String
}
model WebsiteStatus{
   id  String @id @default(uuid())
   responseTime  Int
   statusCheck statusCheck
   region Region @relation(fields: [regionId],references: [id])
   regionId String
   website Website @relation(fields: [websiteId],references: [id])
   websiteId String
}

model Region {
  id    String           @id @default(uuid())
  name  String
  websiteStatuses WebsiteStatus[]
  users   User[]    @relation("UserRegions")
}

enum statusCheck{
  Up
  DOWN
  UNKNONE
}